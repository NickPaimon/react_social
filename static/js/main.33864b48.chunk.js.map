{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","redux/dialogs-reducer.js","components/common/Preloader/Preloader.module.css","components/Nav/Nav.module.css","reportWebVitals.js","fonts/HelveticaNeue.ttf","assets/images/picture.svg","components/Nav/Nav.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","api/api.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","assets/images/without_avatar.jpg","components/Users/User.jsx","components/Users/Users.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.js","assets/images/mainAvatar.png","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataAddInfo.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","assets/images/ava.svg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/icon.svg","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Login/Login.module.css","components/Header/Header.module.css","hoc/withAuthRedirect.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css"],"names":["module","exports","ADD_MESSAGE","ADD_NEW_MESSAGE_TEXT","initialState","messages","id","message","dialogs","name","newMessageText","addMessageActionCreator","type","addNewMessageTextActionCreator","newText","dialogsReducer","state","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Nav","className","s","nav","item","to","activeClassName","active","br","friends_block","friends_pic","src","alt","bg_pic","picture","News","Music","Setting","instance","axios","create","baseURL","withCredentials","headers","authMe","get","responce","data","value","post","email","password","rememberMe","captcha","response","delete","profileAPI","userId","status","put","file","formData","FormData","append","profileData","userAPI","currentPage","pageSize","securityAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingProgress","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","usersReducer","map","u","followed","totalCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selected","pageNumber","e","totalTitle","total","User","user","props","photoButtonBlock","photos","small","withoutAva","user_photo","disabled","some","unFollowThunk","followThunk","userTitle","Users","usersBlock","toString","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingProgress","UsersContainer","getUsersThunk","this","React","Component","mapDispatchToProps","dispatch","a","items","resultCode","compose","connect","withAuthRedirect","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","profileInfo","status_input","onChange","currentTarget","autoFocus","onBlur","updateUserStatus","ProfileDataAddInfo","profile","saveProfileData","leaveEditMode","fullName","setFullName","lookingForAJob","lookingFor","setLookingFor","aboutMe","setAboutMe","lookingForAJobDescription","mySkills","setMySkills","profileTitles","infoInputs","target","defaultChecked","ProfileData","isOwner","goToEditMode","ProfileInfo","about","image","large","ava","mainPhoto","updatePhoto","files","length","savePhoto","description","ADD_POST","ADD_NEW_POST_TEXT","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likes","newPostText","setUserStatus","getUserProfile","profileReducer","postId","Post","post_text","MyPosts","memo","newPostElement","createRef","postElements","my_posts_div","post_area","text","current","addNewPostText","ref","placeholder","addPost","MyPostsContainer","profilePage","addNewPostTextActionCreator","Contact","contactTitle","contactValue","contacts","Profile","contactsTitle","Object","keys","key","ProfileContainer","match","params","authorizedUserId","getUserStatus","refreshProfile","prevProps","prevState","snapshot","auth","isAuth","getState","withRouter","Header","header","logo","social","loginBlock","login","logout","loginLink","SET_USER_DATA","SHOW_WRONG_EMAIL_OR_PASSWORD","GET_CAPTCHA_URL_SUCCESS","correctPassword","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","setAuthThunk","getCaptchaUrl","url","authReducer","HeaderContainer","LoginFormContainer","loginThunkCreator","values","validationSchema","yup","shape","required","initialValues","validateOnBlur","onSubmit","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","login_input","htmlFor","Login","login_form_block","tip","SET_APP","initialized","appReducer","reducers","combineReducers","messagesPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","fallback","path","render","component","Settings","AppContainer","promise","Promise","all","AppWithRouterAndProvider","basename","ReactDOM","document","getElementById","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,MAAQ,2BAA2B,YAAc,iCAAiC,UAAY,+BAA+B,cAAgB,mCAAmC,YAAc,iCAAiC,WAAa,kC,wHCD3RC,EAAc,cACdC,EAAuB,uBAEzBC,EAAe,CACfC,SAAU,CACN,CAACC,GAAI,EAAGC,QAAS,OACjB,CAACD,GAAI,EAAGC,QAAS,aACjB,CAACD,GAAI,EAAGC,QAAS,4BACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,WAErBC,QAAS,CAAC,CAACF,GAAI,EAAGG,KAAM,UACpB,CAACH,GAAI,EAAGG,KAAM,UACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,UACd,CAACH,GAAI,EAAGG,KAAM,WAElBC,eAAgB,QAsBTC,EAA0B,iBAAO,CAACC,KAAMV,IACxCW,EAAiC,SAACC,GAAD,MAAc,CAACF,KAAMT,EAAsBW,QAASA,IAEjFC,IAtBQ,WAAmC,IAAlCC,EAAiC,uDAAzBZ,EAAca,EAAW,uCACrD,OAAQA,EAAOL,MACX,KAAKV,EACD,OAAO,2BACAc,GADP,IAEIN,eAAgB,GAChBL,SAAS,GAAD,mBAAMW,EAAMX,UAAZ,CAAsB,CAACC,GAAI,EAAGC,QAASS,EAAMN,oBAE7D,KAAKP,EACD,OAAO,2BACAa,GADP,IAEIN,eAAgBO,EAAOH,UAE/B,QACI,OAAOE,K,oBClCnBhB,EAAOC,QAAU,CAAC,UAAY,+B,+DCA9BD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,2BAA2B,YAAc,yBAAyB,GAAK,gBAAgB,OAAS,sB,sJCWhMiB,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,GCPC,I,6DCAA,MAA0B,oCCmC1BQ,EA9BH,WACR,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SAAwB,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,OAA1C,uBACxB,qBAAKN,UAAWC,IAAEE,KAAlB,SAAwB,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,OAAxC,uBACxB,qBAAKN,UAAWC,IAAEE,KAAlB,SAAwB,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,OAA1C,wBACxB,qBAAKN,UAAWC,IAAEE,KAAlB,SAAwB,cAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAEK,OAAvC,oBACxB,qBAAKN,UAAWC,IAAEE,KAAlB,SAAwB,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,OAAxC,qBAExB,qBAAKN,UAAWC,IAAEM,KAClB,qBAAKP,UAAWC,IAAEE,KAAlB,SAAwB,cAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAEK,OAA3C,wBACxB,qBAAKN,UAAWC,IAAEM,KAClB,sBAAKP,UAAWC,IAAEO,cAAlB,UACI,8BAAK,gDACL,sBAAKR,UAAWC,IAAEQ,YAAlB,UACA,8BAAK,qBAAKC,IAAI,wEAAwEC,IAAI,YAE1F,8BAAK,qBAAKD,IAAI,wEAAwEC,IAAI,YAE1F,8BAAK,qBAAKD,IAAI,wEAAwEC,IAAI,kBAI9F,8BACI,qBAAKX,UAAWC,IAAEW,OAAQF,IAAKG,EAASF,IAAI,kC,QCnB7CG,G,OAPF,WACT,OACI,yCCKOC,G,OAPD,WACV,OACI,0CCMOC,G,OARC,WACZ,OACE,6C,wDCHAC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAKNC,EAAS,WAEd,OAAON,EAASO,IAAI,WAAW/B,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,SAFpDH,EAAS,SAIZI,GACF,OAAOV,EAASW,KAAK,aACjB,CACIC,MAAOF,EAAME,MACbC,SAAUH,EAAMG,SAChBC,WAAYJ,EAAMI,WAClBC,QAASL,EAAMK,UAChBvC,MAAK,SAAAwC,GAAQ,OAAIA,EAASP,SAX5BH,EAAS,WAcd,OAAON,EAASiB,OAAO,cAClBzC,MAAK,SAAAwC,GAAQ,OAAIA,EAASP,SAI1BS,EAAa,SACPC,GACX,OAAOnB,EAASO,IAAI,WAAaY,IAF5BD,EAAa,SAIRC,GACV,OAAOnB,EAASO,IAAI,mBAAqBY,IALpCD,EAAa,SAOTE,GACT,OAAOpB,EAASqB,IAAI,kBAAmB,CAACD,OAAQA,KAR3CF,EAAa,SAUVI,GACR,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClBtB,EAASqB,IAAI,iBAAkBE,EAAU,CAC5ClB,QAAS,CACL,eAAgB,0BAfnBa,EAAa,SAmBVQ,GACR,OAAO1B,EAASqB,IAAI,WAAYK,IAK3BC,EAAU,WACuB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAO7B,EAASO,IAAT,qBAA2BqB,EAA3B,kBAAgDC,IAClDrD,MAAK,SAAAwC,GAAQ,OAAIA,EAASP,SAH1BkB,EAAU,SAKNlE,GACT,OAAOuC,EAASiB,OAAT,iBAA0BxD,IAC5Be,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,SAP1BkB,EAAU,SASRlE,GACP,OAAOuC,EAASW,KAAT,iBAAwBlD,IAC1Be,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,SAI1BqB,EAAc,WAErB,OAAO9B,EAASO,IAAI,6BCrEpBwB,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAqB,qBACrBC,EAA+B,+BAGjC9E,EAAe,CACf+E,MAAO,GACPT,SAAU,GACVD,YAAa,EACbW,gBAAiB,EACjBC,YAAY,EACZC,kBAAmB,IAwDVC,EAAiB,SAACd,GAAD,MAAkB,CAAC7D,KAAMmE,EAAkBN,gBAE5De,EAAmB,SAACH,GAAD,MAAiB,CAACzE,KAAMqE,EAAoBI,eAC/DI,EAA4B,SAACJ,EAAYrB,GAAb,MAAyB,CAC9DpD,KAAMsE,EACNG,aACArB,WAgCW0B,EA3FM,WAAmC,IAAlC1E,EAAiC,uDAAzBZ,EAAca,EAAW,uCACnD,OAAQA,EAAOL,MACX,KAAKgE,EACD,OAAO,2BACA5D,GADP,IAEImE,MAAOnE,EAAMmE,MAAMQ,KAAI,SAAAC,GACnB,OAAIA,EAAEtF,KAAOW,EAAO+C,OACT,2BAAI4B,GAAX,IAAcC,UAAU,IAErBD,OAInB,KAAKf,EACD,OAAO,2BACA7D,GADP,IAEImE,MAAOnE,EAAMmE,MAAMQ,KAAI,SAAAC,GACnB,OAAIA,EAAEtF,KAAOW,EAAO+C,OACT,2BAAI4B,GAAX,IAAcC,UAAU,IAErBD,OAInB,KAAKd,EACD,OAAO,2BAAI9D,GAAX,IAAkBmE,MAAOlE,EAAOkE,QAEpC,KAAKJ,EACD,OAAO,2BAAI/D,GAAX,IAAkByD,YAAaxD,EAAOwD,cAE1C,KAAKO,EACD,OAAO,2BAAIhE,GAAX,IAAkBoE,gBAAiBnE,EAAO6E,aAE9C,KAAKb,EACD,OAAO,2BAAIjE,GAAX,IAAkBqE,WAAYpE,EAAOoE,aAEzC,KAAKH,EACD,OAAO,2BACAlE,GADP,IACcsE,kBAAmBrE,EAAOoE,WAAP,sBACnBrE,EAAMsE,mBADa,CACMrE,EAAO+C,SACpChD,EAAMsE,kBAAkBS,QAAO,SAACzF,GAC9B,OAAOA,IAAOW,EAAO+C,YAIrC,QACI,OAAOhD,I,oEC7BJgF,GAlCC,SAAC,GAKb,IAL4F,IAA9EC,EAA6E,EAA7EA,gBAAiBvB,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAayB,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAEvFC,EAAYC,KAAKC,KAAKL,EAAkBvB,GAExC6B,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAWI,IAC5BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAYD,GATkD,EAUnDQ,mBAAS,GAV0C,oBAUtFC,EAVsF,KAUvEC,EAVuE,KAWvFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OAAO,sBAAKvE,UAAWC,KAAEmF,UAAlB,UACFJ,EAAgB,GACjB,wBAAQK,QAAS,WAAQJ,EAAiBD,EAAgB,IAA1D,kBAEKL,EACIR,QAAO,SAAAmB,GAAC,OAAIA,GAAKJ,GAAyBI,GAAKH,KAC/CpB,KAAI,SAACuB,GACN,OAAO,sBACMtF,UAAYuF,KAAG,gBAAEtF,KAAEuF,SAAW3C,IAAgByC,GAAIrF,KAAEwF,YACpDJ,QAAS,SAACK,GACNpB,EAAcgB,IAHxB,SAIUA,GAJCA,MAMzBR,EAAeE,GAChB,wBAAQK,QAAS,WAAOJ,EAAiBD,EAAgB,IAAzD,kBACA,sBAAMhF,UAAWC,KAAE0F,WAAnB,iCAAyD,sBAAM3F,UAAWC,KAAE2F,MAAnB,SAA2BvB,Q,oBCjC7E,OAA0B,2CCkC1BwB,GA5BF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAASC,EAAW,yBAC/B,OACI,sBAAK/F,UAAWC,KAAE6F,KAAlB,UAEI,sBAAK9F,UAAWC,KAAE+F,iBAAlB,UACI,cAAC,IAAD,CAAS5F,GAAI,YAAc0F,EAAKpH,GAAhC,SACI,qBAAKgC,IAA0B,MAArBoF,EAAKG,OAAOC,MAAgBJ,EAAKG,OAAOC,MAAQC,GAAYxF,IAAI,MACrEX,UAAWC,KAAEmG,eAErBN,EAAK7B,SACA,wBAAQoC,SAAUN,EAAMrC,kBAAkB4C,MAAK,SAAA5H,GAAE,OAAIA,IAAOoH,EAAKpH,MAAK2G,QAAS,WAC7EU,EAAMQ,cAAcT,EAAKpH,KAD3B,sBAGA,wBAAQ2H,SAAUN,EAAMrC,kBAAkB4C,MAAK,SAAA5H,GAAE,OAAIA,IAAOoH,EAAKpH,MAAK2G,QAAS,WAC7EU,EAAMS,YAAYV,EAAKpH,KADzB,uBAMV,gCACI,8BAAG,sBAAMsB,UAAWC,KAAEwG,UAAnB,yBAAiDX,EAAKjH,QACzD,8BAAG,sBAAMmB,UAAWC,KAAEwG,UAAnB,2BAAmDX,EAAKzD,iBCL5DqE,GAhBH,SAAC,GAA8E,IAA7E7D,EAA4E,EAA5EA,YAAayB,EAA+D,EAA/DA,cAAed,EAAgD,EAAhDA,gBAAiBV,EAA+B,EAA/BA,SAAUS,EAAqB,EAArBA,MAAUwC,EAAW,qFACtF,OACI,sBAAK/F,UAAWC,KAAE0G,WAAlB,UACI,cAAC,GAAD,CAAW9D,YAAaA,EAAayB,cAAeA,EACzCD,gBAAiBb,EAAiBV,SAAUA,IACvD,8BACKS,EAAMQ,KAAI,SAAAC,GAAC,OAAI,cAAC,GAAD,CAAM8B,KAAM9B,EACAN,kBAAmBqC,EAAMrC,kBACzB6C,cAAeR,EAAMQ,cACrBC,YAAaT,EAAMS,aAHXxC,EAAEtF,GAAGkI,qBCZ1C,OAA0B,sC,qBCW1BC,GANG,SAACd,GACf,OACI,qBAAKrF,IAAKoG,GAAW9G,UAAWC,KAAE6G,a,4BCF7BC,GAAWC,cAHC,SAAC5H,GACtB,OAAOA,EAAM6H,UAAU1D,SAE8B,SAACA,GACtD,OAAOA,KAME2D,GAAc,SAAC9H,GACxB,OAAOA,EAAM6H,UAAUnE,UAGdqE,GAAqB,SAAC/H,GAC/B,OAAOA,EAAM6H,UAAUzD,iBAGd4D,GAAiB,SAAChI,GAC3B,OAAOA,EAAM6H,UAAUpE,aAGdwE,GAAgB,SAACjI,GAC1B,OAAOA,EAAM6H,UAAUxD,YAGd6D,GAAuB,SAAClI,GACjC,OAAOA,EAAM6H,UAAUvD,mBCNrB6D,G,4MAOFjD,cAAgB,SAACmB,GAAgB,IACtB3C,EAAY,EAAKiD,MAAjBjD,SACP,EAAKiD,MAAMyB,cAAc/B,EAAY3C,I,kEAPpB,IAAD,EACgB2E,KAAK1B,MAA9BlD,EADS,EACTA,YAAaC,EADJ,EACIA,SACpB2E,KAAK1B,MAAMyB,cAAc3E,EAAaC,K,+BAUtC,OAAO,qCACF2E,KAAK1B,MAAMtC,WAAa,cAAC,GAAD,IAAe,KACnC,cAAC,GAAD,CAAOD,gBAAiBiE,KAAK1B,MAAMvC,gBAC3BV,SAAU2E,KAAK1B,MAAMjD,SACrBD,YAAa4E,KAAK1B,MAAMlD,YACxByB,cAAemD,KAAKnD,cACpBf,MAAOkE,KAAK1B,MAAMxC,MAClBG,kBAAmB+D,KAAK1B,MAAMrC,kBAC9B8C,YAAaiB,KAAK1B,MAAMS,YACxBD,cAAekB,KAAK1B,MAAMQ,uB,GAvBtBmB,IAAMC,WA0C7BC,GAAqB,CACnBjE,iBACAE,4BACA2D,cRgBqB,SAAC3E,EAAaC,GAAd,8CAA2B,WAAO+E,GAAP,eAAAC,EAAA,6DACpDD,EAASjE,GAAiB,IAC1BiE,EAASlE,EAAed,IAF4B,SAG/BD,EAAiBC,EAAaC,GAHC,OAGhDb,EAHgD,OAIpD4F,EAASjE,GAAiB,IAC1BiE,GAhBqBtE,EAgBHtB,EAAS8F,MAhBK,CAAC/I,KAAMkE,EAAWK,WAiBlDsE,GAf0B3D,EAeHjC,EAASiC,WAfU,CAAClF,KAAMoE,EAAiBc,gBASd,iCAT3B,IAACA,EAFLX,IAW+B,OAA3B,uDQfrBiD,YR0BmB,SAAC9H,GAAD,8CAAQ,WAAOmJ,GAAP,SAAAC,EAAA,6DAC/BD,EAAShE,GAA0B,EAAMnF,IADV,SAEVkE,EAAmBlE,GAFT,OAGH,IAHG,OAGlBsJ,YACTH,EA5B2B,CAAC7I,KAAMgE,EAAQZ,OA4B1B1D,IAEpBmJ,EAAShE,GAA0B,EAAOnF,IANX,2CAAR,uDQ1BN6H,cRkCQ,SAAC7H,GAAD,8CAAQ,WAAOmJ,GAAP,SAAAC,EAAA,6DACjCD,EAAShE,GAA0B,EAAMnF,IADR,SAEZkE,EAAqBlE,GAFT,OAGL,IAHK,OAGpBsJ,YACTH,EAnC6B,CAAC7I,KAAMiE,EAAUb,OAmC5B1D,IAEtBmJ,EAAShE,GAA0B,EAAOnF,IANT,2CAAR,wDQ9BduJ,gBAAQC,aApBC,SAAC9I,GACrB,MAAO,CACHmE,MAAOwD,GAAS3H,GAChB0D,SAAUoE,GAAY9H,GACtBoE,gBAAiB2D,GAAmB/H,GACpCyD,YAAauE,GAAehI,GAC5BqE,WAAY4D,GAAcjI,GAC1BsE,kBAAmB4D,GAAqBlI,MAaAwI,IAAqBO,KAAtDF,CAAwEV,I,oBCzExE,OAA0B,uC,oBC6C1Ba,GA1CgB,SAACrC,GAAW,IAAD,EAERhB,oBAAS,GAFD,oBAEjCsD,EAFiC,KAEvBC,EAFuB,OAGZvD,mBAASgB,EAAM1D,QAHH,oBAGjCA,EAHiC,KAGzBkG,EAHyB,KAKtCC,qBAAU,WACPD,EAAUxC,EAAM1D,UAChB,CAAC0D,EAAM1D,SAWV,OAAQ,iCACGgG,GACH,8BACI,oBAAGrI,UAAWC,KAAEoC,OAAQoG,cAbf,WACjBH,GAAY,IAYJ,qBAA6D,sBAAMtI,UAAWC,KAAEyI,YAAnB,SAAiC3C,EAAM1D,QAAU,mBAGjHgG,GACD,8BACI,uBACQrI,UAAWC,KAAE0I,aACdC,SAbI,SAAClD,GACpB6C,EAAU7C,EAAEmD,cAAclH,QAaXA,MAAOU,EACPyG,WAAW,EACX9J,KAAK,OACL+J,OArBI,WACnBT,GAAY,GACZvC,EAAMiD,iBAAiB3G,YCiDhB4G,GA9DY,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,cAAmB,EACxCrE,mBAASmE,EAAQG,UADuB,oBACjEA,EADiE,KACvDC,EADuD,OAMpCvE,mBAASmE,EAAQK,gBANmB,oBAMjEC,EANiE,KAMrDC,EANqD,OAW1C1E,mBAASmE,EAAQQ,SAXyB,oBAWjEA,EAXiE,KAWxDC,EAXwD,OAgBxC5E,mBAASmE,EAAQU,2BAhBuB,oBAgBjEC,EAhBiE,KAgBvDC,EAhBuD,KAiCxE,OACI,gCACI,gCACI,mBAAG9J,UAAWC,KAAE8J,cAAhB,wBACA,uBAAO/J,UAAWC,KAAE+J,WAAYhL,KAAK,OAAO2C,MAAO0H,EACnDT,SApCU,SAAClD,GACnB4D,EAAY5D,EAAEmD,cAAclH,aAqCxB,gCACI,mBAAG3B,UAAWC,KAAE8J,cAAhB,kCACA,uBAAMnB,SAnCO,SAAClD,GACtB+D,EAAc/D,EAAEuE,OAAOtI,QAkCf,UACI,uBAAO3C,KAAK,QAAQ2C,OAAO,EAAOuI,gBAA+B,IAAfV,EAAqB3K,KAAK,YADhF,MAEI,uBAAOG,KAAK,QAAQ2C,OAAO,EAAOuI,gBAA+B,IAAfV,EAAsB3K,KAAK,YAFjF,WAKJ,gCACI,mBAAGmB,UAAWC,KAAE8J,cAAhB,sCACA,uBAAO/J,UAAWC,KAAE+J,WAAYhL,KAAK,OAAO2C,MAAOkI,EAAUjB,SAhChD,SAAClD,GACpBoE,EAAYpE,EAAEmD,cAAclH,aAiC1B,gCACI,mBAAG3B,UAAWC,KAAE8J,cAAhB,uBACA,uBAAO/J,UAAWC,KAAE+J,WAAYhL,KAAK,OAAO2C,MAAO+H,EAASd,SAzC/C,SAAClD,GACpBiE,EAAWjE,EAAEmD,cAAclH,aA0CzB,8BACE,wBAAQ0D,QAlCE,WAOd8D,EANkB,CACdO,QAASA,EACTH,eAAgBC,EAChBI,0BAA2BC,EAC3BR,SAAUA,IAGdD,KA0BI,wBCnBNe,GAAc,SAAC,GAAgD,IAA/CjB,EAA8C,EAA9CA,QAASkB,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,aAAiBtE,EAAW,qDAChE,OACI,gCACI,8BACI,oBAAG/F,UAAWC,KAAE8J,cAAhB,wBAA0C,sBAAM/J,UAAWC,KAAEyI,YAAnB,SAAiCQ,EAAQG,gBAEvF,8BACI,cAAC,GAAD,CAAwBhH,OAAQ0D,EAAM1D,OAAQ2G,iBAAkBjD,EAAMiD,qBAE1E,8BACI,oBAAGhJ,UAAWC,KAAE8J,cAAhB,iCAAmD,sBAAM/J,UAAWC,KAAEyI,YAAnB,SAAiCQ,EAAQK,eAAiB,MAAQ,YAEzH,8BACI,oBAAGvJ,UAAWC,KAAE8J,cAAhB,qCAAuD,sBAAM/J,UAAWC,KAAEyI,YAAnB,SAAiCQ,EAAQU,iCAEpG,8BACI,oBAAG5J,UAAWC,KAAE8J,cAAhB,uBAAyC,sBAAM/J,UAAWC,KAAEyI,YAAnB,SAAiCQ,EAAQQ,eAEtF,8BACKU,GAAW,wBAAQ/E,QAASgF,EAAjB,uBAMbC,GA1DK,SAACvE,GAAW,IAAD,EACGhB,oBAAS,GADZ,oBACtBsD,EADsB,KACZC,EADY,KAQ3B,OACI,sBAAKtI,UAAWC,KAAEsK,MAAlB,UACI,sBAAKvK,UAAWC,KAAEuK,MAAlB,UACI,qBAAK9J,IAAKqF,EAAMmD,QAAQjD,OAAOwE,OAASC,GAAK/J,IAAI,MAAMX,UAAWC,KAAE0K,YACnE5E,EAAMqE,SAAW/B,GAAY,uBAAOrJ,KAAM,OAClBgB,UAAWC,KAAE2K,YACbhC,SAXT,SAAClD,GACrBA,EAAEuE,OAAOY,MAAMC,QACf/E,EAAMgF,UAAUrF,EAAEuE,OAAOY,MAAM,UAa/B,qBAAK7K,UAAWC,KAAE+K,YAAlB,SACM3C,EACI,cAAC,GAAD,CAAoBe,cAAe,WAAQd,GAAY,IAASa,gBAAiBpD,EAAMoD,gBAAiBD,QAASnD,EAAMmD,UACvH,cAAC,GAAD,CAAamB,aAAc,WAAO/B,GAAY,IACjCY,QAASnD,EAAMmD,QACfkB,QAASrE,EAAMqE,QACf/H,OAAQ0D,EAAM1D,OACd2G,iBAAkBjD,EAAMiD,yBC9BrDiC,GAAW,WACXC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAkB,kBAClBC,GAAc,cACdC,GAAqB,qBAEvB9M,GAAe,CACf+M,MAAO,CACH,CAAC7M,GAAI,EAAGC,QAAS,mBAAoB6M,MAAO,GAC5C,CAAC9M,GAAI,EAAGC,QAAS,qBAAuB6M,MAAO,GAC/C,CAAC9M,GAAI,EAAGC,QAAS,qBAAuB6M,MAAO,IAEnDC,YAAa,GACbvC,QAAS,KACT7G,OAAQ,IAkDDqJ,GAAgB,SAACrJ,GAAD,MAAa,CAACrD,KAAMoM,GAAiB/I,WAIrDsJ,GAAiB,SAACvJ,GAAD,8CAAY,WAAOyF,GAAP,eAAAC,EAAA,sEACf3F,EAA0BC,GADX,OAChCH,EADgC,OAEpC4F,GAPyBqB,EAODjH,EAASP,KAPK,CAAC1C,KAAMmM,GAAkBjC,aAK3B,iCALZ,IAACA,IAKW,OAAZ,uDA6Bb0C,GAhFQ,WAAmC,IAAlCxM,EAAiC,uDAAzBZ,GAAca,EAAW,uCACrD,OAAQA,EAAOL,MACX,KAAKiM,GACD,OAAO,2BACA7L,GADP,IAEImM,MAAM,GAAD,mBAAMnM,EAAMmM,OAAZ,CAAmB,CAAC7M,GAAI,EAAGC,QAASS,EAAMqM,YAAaD,MAAO,KACnEC,YAAa,KAGrB,KAAKP,GACD,OAAO,2BACA9L,GADP,IAEIqM,YAAapM,EAAOH,UAG5B,KAAKiM,GACD,OAAO,2BACA/L,GADP,IAEI8J,QAAS7J,EAAO6J,UAGxB,KAAKkC,GACD,OAAO,2BACAhM,GADP,IAEIiD,OAAQhD,EAAOgD,SAGvB,KAAKgJ,GACD,OAAO,2BACAjM,GADP,IAEImM,MAAOnM,EAAMmM,MAAMpH,QAAO,SAAAmB,GAAC,OAAIA,EAAE5G,KAAOW,EAAOwM,YAGvD,KAAKP,GACD,OAAO,2BACAlM,GADP,IAEE8J,QAAQ,2BAAK9J,EAAM8J,SAAZ,IAAqBjD,OAAQ5G,EAAO4G,WAGjD,QACI,OAAO7G,I,wCC5DJ,OAA0B,gCCmB1B0M,GAfF,SAAC/F,GACZ,OACE,sBAAK/F,UAAWC,KAAEE,KAAlB,UACE,qBAAKO,IAAKgK,GAAK/J,IAAI,WACnB,sBAAKX,UAAWC,KAAE8L,UAAlB,UACI,mBAAG/L,UAAWC,KAAEpB,KAAhB,kBACA,qBAAKmB,UAAWC,KAAEtB,QAAlB,SAA4BoH,EAAMpH,UAClC,sBAAKqB,UAAWC,KAAEuL,MAAlB,UACI,wCADJ,IACuBzF,EAAMyF,gBCyBxBQ,GAjCCtE,IAAMuE,MAAK,SAAClG,GAGxB,IAAImG,EAAiBxE,IAAMyE,YAWvBC,EAAerG,EAAMwF,MAAMxH,KAAI,SAAAuB,GAAC,OAAI,cAAC,GAAD,CAAMkG,MAAOlG,EAAEkG,MAA6B7M,QAAS2G,EAAE3G,SAA5B2G,EAAE5G,GAAGkI,eACxE,OACI,sBAAK5G,UAAWC,KAAEoM,aAAlB,UACI,0CACA,sBAAKrM,UAAWC,KAAEqM,UAAlB,UACI,mDACA,0BAAU1D,SAXH,WACf,IAAI2D,EAAOL,EAAeM,QAAQ7K,MAClCoE,EAAM0G,eAAeF,IASqBG,IAAKR,EAC7BvK,MAAOoE,EAAM0F,YACbkB,YAAa,oCACvB,wBAAQtH,QAlBJ,WACZU,EAAM6G,WAiBE,qBAEJ,qBAAK5M,UAAWC,KAAEsL,MAAlB,SACKa,UCLFS,GAFU3E,aAjBD,SAAC9I,GACjB,MAAO,CACHmM,MAAOnM,EAAM0N,YAAYvB,MACzBE,YAAarM,EAAM0N,YAAYrB,gBAGhB,SAAC5D,GACxB,MAAO,CACH4E,eAAgB,SAACF,GACb1E,EJkD6B,SAAC0E,GAAD,MAAW,CAACvN,KAAMkM,GAAmBhM,QAASqN,GIlDlEQ,CAA4BR,KAEzCK,QAAS,WACL/E,EJ8C6B,CAAC7I,KAAMiM,SIzCvB/C,CAA6C8D,I,oBCChEgB,GAAU,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OACI,8BACI,oBAAGlN,UAAWC,KAAEkN,SAAhB,UAA2BF,EAA3B,KAA2CC,QAMxCE,GA3BC,SAACrH,GACb,OAAIA,EAAMmD,QAKV,iCACE,cAAC,GAAD,CAAaC,gBAAiBpD,EAAMoD,gBAAiB4B,UAAWhF,EAAMgF,UAAWX,QAASrE,EAAMqE,QAASlB,QAASnD,EAAMmD,QAAS7G,OAAQ0D,EAAM1D,OAAQ2G,iBAAkBjD,EAAMiD,mBAC/K,cAAC,GAAD,IACE,gCACI,mBAAGhJ,UAAWC,KAAEoN,cAAhB,wBADJ,IACmDC,OAAOC,KAAKxH,EAAMmD,QAAQiE,UAAUpJ,KAAI,SAAAyJ,GACvF,OAAO,cAAC,GAAD,CAAmBP,aAAcO,EAAKN,aAAcnH,EAAMmD,QAAQiE,SAASK,IAA7DA,YATlB,cAAC,GAAD,KCCTC,G,+KAEE,IAAIrL,EAASqF,KAAK1B,MAAM2H,MAAMC,OAAOvL,OAChCA,IACDA,EAASqF,KAAK1B,MAAM6H,kBAKxBnG,KAAK1B,MAAM4F,eAAevJ,GAC1BqF,KAAK1B,MAAM8H,cAAczL,K,0CAIzBqF,KAAKqG,mB,yCAGUC,EAAWC,EAAWC,GACjCxG,KAAK1B,MAAM2H,MAAMC,OAAOvL,SAAW2L,EAAUL,MAAMC,OAAOvL,QAC1DqF,KAAKqG,mB,+BAMT,OACI,cAAC,GAAD,2BAAarG,KAAK1B,OAAlB,IACSqE,SAAU3C,KAAK1B,MAAM2H,MAAMC,OAAOvL,OAClC8G,QAASzB,KAAK1B,MAAMmD,QACpB7G,OAAQoF,KAAK1B,MAAM1D,OACnB2G,iBAAkBvB,KAAK1B,MAAMiD,iBAC7B+B,UAAWtD,KAAK1B,MAAMgF,UACtB5B,gBAAiB1B,KAAK1B,MAAMoD,uB,GAhClBzB,IAAMC,WA6CtBM,gBAAQC,aARD,SAAC9I,GAAD,MAAY,CAC9B8J,QAAS9J,EAAM0N,YAAY5D,QAC3B7G,OAAQjD,EAAM0N,YAAYzK,OAC1BuL,iBAAkBxO,EAAM8O,KAAK9L,OAC7B+L,OAAQ/O,EAAM8O,KAAKC,UAIyB,CAACxC,kBAAgBkC,cNqBtC,SAACzL,GAAD,8CAAY,WAAOyF,GAAP,eAAAC,EAAA,sEACd3F,EAAyBC,GADX,OAC/BH,EAD+B,OAEnC4F,EAAS6D,GAAczJ,EAASP,OAFG,2CAAZ,uDMrBqDsH,iBNyBlD,SAAC3G,GAAD,8CAAY,WAAOwF,GAAP,SAAAC,EAAA,sEACjB3F,EAAwBE,GADP,OAEL,IAFK,OAEzBX,KAAKsG,YACdH,EAAS6D,GAAcrJ,IAHW,2CAAZ,uDMzBoE0I,UN8B3E,SAACxI,GAAD,8CAAU,WAAOsF,GAAP,eAAAC,EAAA,sEACR3F,EAAuBI,GADf,OAEG,KAD5BN,EADyB,QAEjBP,KAAKsG,YACbH,GAlBuB5B,EAkBGhE,EAASP,KAAKA,KAAKuE,OAlBV,CAACjH,KAAMsM,GAAoBrF,YAerC,iCAfH,IAACA,IAeE,OAAV,uDM9BsFkD,gBNqChF,SAACxG,GAAD,8CAAiB,WAAOkF,EAAUuG,GAAjB,eAAAtG,EAAA,6DACpC1F,EAASgM,IAAWF,KAAK9L,OADW,SAErBD,EAAuBQ,GAFF,OAGV,IAHU,OAG9BjB,KAAKsG,YACbH,EAAS8D,GAAevJ,IAJc,2CAAjB,2DMpCzBiM,IAAYlG,KADDF,CACmBwF,I,oBCvDnB,OAA0B,iCCsB1Ba,GAjBA,SAACvI,GACZ,OACI,yBAAQ/F,UAAWC,KAAEsO,OAArB,UACI,gCACI,qBAAK7N,IAAK8N,GACL7N,IAAI,SACT,oBAAIX,UAAWC,KAAEwO,OAAjB,+BAEJ,qBAAKzO,UAAWC,KAAEyO,WAAlB,SACK3I,EAAMoI,OACD,gCAAMpI,EAAM4I,MAAZ,IAAmB,wBAAQtJ,QAASU,EAAM6I,OAAvB,wBACnB,cAAC,IAAD,CAASxO,GAAI,SAAUJ,UAAWC,KAAE4O,UAApC,yBCdhBC,GAAgB,gBAChBC,GAA+B,+BAC/BC,GAA0B,0BAE1BxQ,GAAe,CACjB4D,OAAQ,KACRP,MAAO,KACP8M,MAAO,KACPlL,YAAY,EACZ0K,QAAQ,EACRc,gBAAiB,KACjBC,WAAY,MA6BVC,GAAkB,SAAC/M,EAAQP,EAAO8M,EAAOR,EAAQc,GAA/B,MAAoD,CACxEjQ,KAAM8P,GACNM,QAAS,CAAChN,SAAQP,QAAO8M,QAAOR,SAAQc,qBAItCI,GAAuB,SAACH,GAAD,MAAiB,CAC1ClQ,KAAMgQ,GACNI,QAAUF,IAIDI,GAAe,yDAAM,WAAOzH,GAAP,uBAAAC,EAAA,sEACPvG,IADO,OAEF,KADtBU,EADwB,QAEjB+F,aAAmB,EACH/F,EAASP,KAA7BhD,EADsB,EACtBA,GAAImD,EADkB,EAClBA,MAAO8M,EADW,EACXA,MAEhB9G,EAASsH,GAAgBzQ,EAAImD,EAAO8M,GAAO,KALjB,2CAAN,uDA+BfY,GAAgB,yDAAM,WAAO1H,GAAP,iBAAAC,EAAA,sEACR/E,IADQ,OACzBd,EADyB,OAGzBiN,EAAajN,EAASP,KAAK8N,IAEjC3H,EAASwH,GAAqBH,IALC,2CAAN,uDAQdO,GA7EK,WAAmC,IAAlCrQ,EAAiC,uDAAzBZ,GAAca,EAAW,uCAClD,OAAQA,EAAOL,MACX,KAAK8P,GACD,OAAO,2BACA1P,GACAC,EAAO+P,SAElB,KAAKL,GACD,OAAO,2BACA3P,GADP,IAEI6P,iBAAiB,IAIzB,KAAKD,GACD,OAAO,2BACA5P,GADP,IAEI8P,WAAY7P,EAAO+P,UAI3B,QACI,OAAOhQ,ICjCbsQ,G,uKAGE,OAAO,cAAC,GAAD,eAAYjI,KAAK1B,Y,GAHF2B,IAAMC,WAarBO,gBANS,SAAC9I,GAAD,MAAY,CAChC+O,OAAQ/O,EAAM8O,KAAKC,OACnBQ,MAAOvP,EAAM8O,KAAKS,SAIkB,CAACC,OD2DnB,yDAAM,WAAO/G,GAAP,SAAAC,EAAA,sEACDvG,IADC,OAEI,IAFJ,OAEXyG,YAETH,EAASsH,GAAgB,KAAM,KAAM,MAAM,EAAO,OAJ9B,2CAAN,wDC3DPjH,CAAmCwH,I,sCCwE5CC,GAAqBzH,aARH,SAAC9I,GACrB,MAAO,CACH+O,OAAQ/O,EAAM8O,KAAKC,OACnBc,gBAAiB7P,EAAM8O,KAAKe,gBAC5BC,WAAY9P,EAAM8O,KAAKgB,cAIqB,CAACU,kBF3BpB,SAACC,GAAD,8CAAY,WAAOhI,GAAP,eAAAC,EAAA,sEAClBvG,EAAasO,GADK,OAEb,KADtB5N,EADmC,QAE5B+F,WAETH,EAASyH,OAEmB,KAAxBrN,EAAS+F,YAETH,EAAS0H,MAGb1H,EA5BgC,CAAC7I,KAAM+P,MAiBF,2CAAZ,wDE2BN7G,EAjFT,SAACnC,GACf,IAAM+J,EAAmBC,OAAaC,MAAM,CACxCnO,MAAOkO,OAAalO,MAAM,yFAAwBoO,SAAS,sEAC3DnO,SAAUiO,OAAaE,SAAS,wEAGpC,OAAIlK,EAAMoI,OACC,cAAC,IAAD,CAAU/N,GAAI,YAIrB,8BACI,cAAC,KAAD,CACI8P,cAAe,CACXrO,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,QAAS,IAEbmO,gBAAc,EACdC,SAAU,SAACP,GACP9J,EAAM6J,kBAAkBC,IAE5BC,iBAAkBA,EAXtB,SAaK,gBAAED,EAAF,EAAEA,OAAQQ,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,WAAYC,EAArD,EAAqDA,QAASC,EAA9D,EAA8DA,aAAcC,EAA5E,EAA4EA,MAA5E,OACG,uBAAMP,SAAUM,EAAhB,UACI,uBACI1Q,UAAWC,KAAE2Q,YACbjE,YAAa,QACb3N,KAAM,OACNH,KAAM,QACN+J,SAAU2H,EACVxH,OAAQyH,EACR7O,MAAOkO,EAAOhO,QAClB,4BAAIwO,EAAOxO,OAASyO,EAAQzO,OAASwO,EAAOxO,QAC5C,uBACI7B,UAAWC,KAAE2Q,YACbjE,YAAa,WACb3N,KAAM,WACNH,KAAM,WACN+J,SAAU2H,EACVxH,OAAQyH,EACR7O,MAAOkO,EAAO/N,WAClB,8BAAIuO,EAAOvO,UAAYwO,EAAQxO,UAAYuO,EAAOvO,SAC7CiE,EAAMkJ,gBACD,0BACA,QAEV,cAAC,KAAD,CACIjQ,KAAM,WACNH,KAAM,eAEV,uBAAOgS,QAAS,aAAhB,yBACA,wBAAQ7R,KAAM,SAAUqH,UAAWoK,IAAYE,EAAOtL,QAASqL,EAA/D,mBACA,gCACK3K,EAAMmJ,YAAc,qBAAKxO,IAAKqF,EAAMmJ,WAAYvO,IAAI,YACpDoF,EAAMmJ,YAAc,uBACjBlQ,KAAK,OACLgB,UAAWC,KAAE2Q,YACb/R,KAAM,UACN8N,YAAa,UACbhL,MAAOkO,EAAO7N,QACd4G,SAAU2H,kBAgC3BO,GAZD,SAAC/K,GACX,OAAO,sBAAK/F,UAAWC,KAAE8Q,iBAAlB,UACH,uCACA,sBAAK/Q,UAAWC,KAAE+Q,IAAlB,UACI,wCAAU,yDACV,uCAAS,8CAEb,cAACrB,GAAD,QCjGFsB,GAAU,UAEZzS,GAAe,CACf0S,aAAa,GAwBFC,GArBI,WAAmC,IAAlC/R,EAAiC,uDAAzBZ,GAAca,EAAW,uCACjD,OAAQA,EAAOL,MACX,KAAKiS,GACD,OAAO,2BACA7R,GADP,IAEI8R,aAAa,IAErB,QACI,OAAO9R,I,oBCRfgS,GAAWC,aAAgB,CAC3BvE,YAAalB,GACb0F,aAAcnS,KACd8H,UAAWnD,EACXoK,KAAMuB,GACN8B,IAAKJ,KAEHK,GAAmBC,OAAOC,sCAAwCzJ,KAKzD0J,GAJDC,aAAYR,GAAUI,GAAiBK,aAAgBC,QCG/DC,GAAmBrK,IAAMsK,MAAK,kBAAM,iCAGpCC,G,4MACFC,wBAA0B,SAACC,GACzBC,MAAM,4B,kEAIJ3K,KAAK1B,MAAMsM,gBACXZ,OAAOa,iBAAiB,qBAAsB7K,KAAKyK,2B,6CAGnDT,OAAOc,oBAAoB,qBAAsB9K,KAAKyK,2B,+BAItD,OAAKzK,KAAK1B,MAAMmL,YAIR,qBAAKlR,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,sBAAf,SACI,eAAC,WAAD,CAAUwS,SAAU,cAAC,GAAD,IAApB,UACI,cAAC,IAAD,CAAOC,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOD,KAAK,oBACLC,OAAQ,kBAAM,cAAC,GAAD,OAErB,cAAC,IAAD,CAAOD,KAAK,WACLC,OAAQ,kBAAM,cAACX,GAAD,OAErB,cAAC,IAAD,CAAOU,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOD,KAAK,QAAQE,UAAW7R,IAC/B,cAAC,IAAD,CAAO2R,KAAK,SAASE,UAAW5R,IAChC,cAAC,IAAD,CAAO0R,KAAK,YAAYE,UAAWC,cArBhD,cAAC,GAAD,Q,GAfDlL,IAAMC,WAmDlBkL,GAAe3K,aAJG,SAAC9I,GAAD,MAAY,CAChC8R,YAAa9R,EAAMmS,IAAIL,eAGmB,CAAC5B,gBAAc+C,cFnDhC,kBAAM,SAACxK,GAChC,IAAIiL,EAAUjL,EAASyH,MACvByD,QAAQC,IAAI,CAACF,IAAUrT,MAAK,WACxBoI,EAL0B,CAAC7I,KAAMiS,WEqDpB/I,CAAwD+J,IAU9DgB,GARkB,WAC7B,OAAO,cAAC,IAAD,CAAYC,SAAU,2CAAtB,SACH,cAAC,IAAD,CAAUvB,MAAOA,GAAjB,SACI,cAACkB,GAAD,SCvEZM,IAAST,OAAO,cAAC,GAAD,IAA8BU,SAASC,eAAe,SAMtE/T,K,mBCZAlB,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,KAAO,oBAAoB,iBAAmB,gCAAgC,UAAY,2B,mBCA1LD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,SAAW,4BAA4B,UAAY,6BAA6B,MAAQ,yBAAyB,WAAa,gC,mBCA3LD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,QAAU,sBAAsB,KAAO,mBAAmB,MAAQ,sB,mBCAlJD,EAAOC,QAAU,CAAC,iBAAmB,gCAAgC,YAAc,2BAA2B,YAAc,2BAA2B,IAAM,qB,mBCA7JD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,WAAa,2BAA2B,UAAY,4B,gJCIlIiV,EAA6B,SAAClU,GAAD,MAAY,CAC1C+O,OAAQ/O,EAAM8O,KAAKC,SAEThG,EAAmB,SAACR,GAAe,IACtC4L,EADqC,uKAGnC,OAAK9L,KAAK1B,MAAMoI,OAET,cAACxG,EAAD,eAAeF,KAAK1B,QAFI,cAAC,IAAD,CAAU3F,GAAG,eAHT,GACXsH,IAAMC,WAUtC,OAFqCO,YAAQoL,EAARpL,CAAoCqL,K,mBChB7EnV,EAAOC,QAAU,CAAC,OAAS,uCAAuC,YAAc,8C,mBCAhFD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,mBCAjED,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,SAAW,6B","file":"static/js/main.33864b48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"ProfileInfo_about__xOaeM\",\"image\":\"ProfileInfo_image__hYHGz\",\"description\":\"ProfileInfo_description__3pDDN\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1EX94\",\"profileTitles\":\"ProfileInfo_profileTitles__11HAl\",\"profileInfo\":\"ProfileInfo_profileInfo__3Ns_7\",\"infoInputs\":\"ProfileInfo_infoInputs__2w9Mt\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst ADD_NEW_MESSAGE_TEXT = 'ADD-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'Whats up?'},\r\n        {id: 3, message: 'How is your it camasutra'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo yo '},\r\n    ],\r\n    dialogs: [{id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    newMessageText: 'mess'\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return  {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 5, message: state.newMessageText}]\r\n            };\r\n        case ADD_NEW_MESSAGE_TEXT:\r\n            return  {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport let addMessageActionCreator = () => ({type: ADD_MESSAGE});\r\nexport let addNewMessageTextActionCreator = (newText) => ({type: ADD_NEW_MESSAGE_TEXT, newText: newText});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1dHvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1QeKs\",\"item\":\"Nav_item__27mAa\",\"active\":\"Nav_active__3WHkV\",\"friends_block\":\"Nav_friends_block__3TWey\",\"friends_pic\":\"Nav_friends_pic__2IltO\",\"br\":\"Nav_br__2t5iw\",\"bg_pic\":\"Nav_bg_pic__1ghzx\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/HelveticaNeue.50a6cd50.ttf\";","export default __webpack_public_path__ + \"static/media/picture.f26377d9.svg\";","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport picture from '../../assets/images/picture.svg';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}>Friends</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/news\" activeClassName={s.active}>News</NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink></div>\r\n\r\n            <div className={s.br}></div>\r\n            <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></div>\r\n            <div className={s.br}></div>\r\n            <div className={s.friends_block}>\r\n                <div><p>Quick message</p></div>\r\n                <div className={s.friends_pic}>\r\n                <div><img src=\"https://image.freepik.com/free-vector/chinese-girl-avatar_8500-16.jpg\" alt=\"pic_1\"/>\r\n                </div>\r\n                <div><img src=\"https://image.freepik.com/free-vector/chinese-girl-avatar_8500-16.jpg\" alt=\"pic_2\"/>\r\n                </div>\r\n                <div><img src=\"https://image.freepik.com/free-vector/chinese-girl-avatar_8500-16.jpg\" alt=\"pic_3\"/>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <img className={s.bg_pic} src={picture} alt=\"nice background picture\"/>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            news\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Setting = () => {\r\n    return (\r\n      <div>\r\n          Settings\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Setting;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"cd49187f-82a8-4960-90f6-9495d499b6b1\"\r\n    }\r\n});\r\n\r\n\r\nexport const authMe = {\r\n    me() {\r\n        return instance.get('auth/me').then(responce => responce.data);\r\n    },\r\n    login(value) {\r\n        return instance.post('auth/login',\r\n            {\r\n                email: value.email,\r\n                password: value.password,\r\n                rememberMe: value.rememberMe,\r\n                captcha: value.captcha\r\n            }).then(response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get('profile/' + userId);\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get('/profile/status/' + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('/profile/status', {status: status});\r\n    },\r\n    uploadPhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file)\r\n        return instance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profileData) {\r\n        return instance.put('/profile', profileData);\r\n    }\r\n};\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unFollowUser(id)  {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    followUser(id)  {\r\n        return instance.post(`follow/${id}`)\r\n            .then(responce => responce.data);\r\n    },\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n      return instance.get('security/get-captcha-url')\r\n  }\r\n};\r\n\r\n","import {userAPI} from \"../api/api\";\r\n\r\n// action types\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount};\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter((id) => {\r\n                        return id !== action.userId;\r\n                    })\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unFollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n// получить юзеров\r\nexport const getUsersThunk = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n    let response = await userAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalCount(response.totalCount));\r\n};\r\n\r\n\r\n\r\nexport const followThunk = (id) => async (dispatch) => {\r\n    dispatch(toggleIsFollowingProgress(true, id));\r\n    let response = await userAPI.followUser(id);\r\n    if (response.resultCode === 0) {\r\n        dispatch(follow(id))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, id));\r\n};\r\nexport const unFollowThunk = (id) => async (dispatch) => {\r\n    dispatch(toggleIsFollowingProgress(true, id));\r\n    let response = await userAPI.unFollowUser(id);\r\n    if (response.resultCode === 0) {\r\n        dispatch(unFollow(id))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, id));\r\n};\r\n\r\nexport default usersReducer;","import React , {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pageCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pageCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span key={p}\r\n                             className={ cn({[s.selected]: currentPage === p}, s.pageNumber)}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n        <span className={s.totalTitle}>Total Users Count: </span><span className={s.total}>{totalItemsCount}</span>\r\n        </div>\r\n};\r\n\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/without_avatar.bb32b6a3.jpg\";","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport withoutAva from \"../../assets/images/without_avatar.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = ({user, ...props}) => {\r\n    return (\r\n        <div className={s.user}>\r\n\r\n            <div className={s.photoButtonBlock}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : withoutAva} alt=\"ava\"\r\n                         className={s.user_photo}/>\r\n                </NavLink>\r\n                {user.followed\r\n                    ? <button disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.unFollowThunk(user.id)\r\n                    }}>Unfollow</button>\r\n                    : <button disabled={props.followingProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.followThunk(user.id)\r\n                    }}>Follow</button>\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                <p><span className={s.userTitle}>User Name: </span>{user.name}</p>\r\n                <p><span className={s.userTitle}>User Status: </span>{user.status}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport s from './Users.module.css';\r\n\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return (\r\n        <div className={s.usersBlock}>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n            <div>\r\n                {users.map(u => <User user={u} key={u.id.toString()}\r\n                                            followingProgress={props.followingProgress}\r\n                                            unFollowThunk={props.unFollowThunk}\r\n                                            followThunk={props.followThunk}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.4c15e740.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\nimport s from \"./Preloader.module.css\";\r\n\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <img src={preloader} className={s.preloader}/>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users;\r\n});\r\n\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingProgress;\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport\r\n{\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    getUsersThunk, followThunk, unFollowThunk\r\n}\r\n    from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsersThunk(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsersThunk(pageNumber, pageSize);\r\n    };\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n                 <Users totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         currentPage={this.props.currentPage}\r\n                         onPageChanged={this.onPageChanged}\r\n                         users={this.props.users}\r\n                         followingProgress={this.props.followingProgress}\r\n                         followThunk={this.props.followThunk}\r\n                         unFollowThunk={this.props.unFollowThunk}\r\n                />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state),\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsersThunk,\r\n        followThunk, unFollowThunk\r\n};\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(UsersContainer);\r\n\r\n","export default __webpack_public_path__ + \"static/media/mainAvatar.b8f30eb5.png\";","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileStatusWithHooks.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n    return (<div>\r\n            { !editMode &&\r\n            <div>\r\n                <p className={s.status} onDoubleClick={activateMode}>Status: <span className={s.profileInfo}>{props.status || 'no-status'}</span></p>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                        className={s.status_input}\r\n                       onChange={onStatusChange}\r\n                       value={status}\r\n                       autoFocus={true}\r\n                       type=\"text\"\r\n                       onBlur={deactivateMode}\r\n                       />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileDataAddInfo = ({profile, saveProfileData, leaveEditMode}) => {\r\n    let [fullName, setFullName] = useState(profile.fullName);\r\n    let onNameChanged = (e) => {\r\n      setFullName(e.currentTarget.value)\r\n    };\r\n\r\n    let [lookingFor, setLookingFor] = useState(profile.lookingForAJob);\r\n    let onLookingChanged = (e) => {\r\n      setLookingFor(e.target.value);\r\n    };\r\n\r\n    let [aboutMe, setAboutMe] = useState(profile.aboutMe);\r\n    let onAboutMeChanged = (e) => {\r\n        setAboutMe(e.currentTarget.value);\r\n    };\r\n\r\n    let [mySkills, setMySkills] = useState(profile.lookingForAJobDescription);\r\n    let onMySkillsChange = (e) => {\r\n        setMySkills(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    let collectData = () => {\r\n        let profileData = {\r\n            aboutMe: aboutMe,\r\n            lookingForAJob: lookingFor,\r\n            lookingForAJobDescription: mySkills,\r\n            fullName: fullName,\r\n        };\r\n        saveProfileData(profileData);\r\n        leaveEditMode();\r\n    };\r\n\r\n  return (\r\n      <div>\r\n          <div>\r\n              <p className={s.profileTitles}>Full Name:</p>\r\n              <input className={s.infoInputs} type=\"text\" value={fullName}\r\n              onChange={onNameChanged}/>\r\n          </div>\r\n          <div>\r\n              <p className={s.profileTitles}>Looking for a job : </p>\r\n              <span onChange={onLookingChanged}>\r\n                  <input type=\"radio\" value={true}  defaultChecked={lookingFor === true} name=\"needJob\"/>Yes\r\n                  <input type=\"radio\" value={false} defaultChecked={lookingFor === false} name=\"needJob\"/>No\r\n              </span>\r\n          </div>\r\n          <div>\r\n              <p className={s.profileTitles}>My professional skills :</p>\r\n              <input className={s.infoInputs} type=\"text\" value={mySkills} onChange={onMySkillsChange}/>\r\n          </div>\r\n          <div>\r\n              <p className={s.profileTitles}>About me:</p>\r\n              <input className={s.infoInputs} type=\"text\" value={aboutMe} onChange={onAboutMeChanged}/>\r\n          </div>\r\n          <div>\r\n            <button onClick={collectData}>Save</button>\r\n          </div>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default ProfileDataAddInfo;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport ava from '../../../assets/images/mainAvatar.png';\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileDataAddInfo from \"./ProfileDataAddInfo\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n    return (\r\n        <div className={s.about}>\r\n            <div className={s.image}>\r\n                <img src={props.profile.photos.large || ava} alt=\"ava\" className={s.mainPhoto}/>\r\n                {props.isOwner && editMode && <input type={\"file\"}\r\n                                         className={s.updatePhoto}\r\n                                         onChange={onMainPhotoSelected}/>}\r\n\r\n\r\n            </div>\r\n            <div className={s.description}>\r\n                { editMode\r\n                    ? <ProfileDataAddInfo leaveEditMode={() => { setEditMode(false)}} saveProfileData={props.saveProfileData} profile={props.profile}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}}\r\n                                   profile={props.profile}\r\n                                   isOwner={props.isOwner}\r\n                                   status={props.status}\r\n                                   updateUserStatus={props.updateUserStatus}/>}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode, ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <p className={s.profileTitles}>Full Name: <span className={s.profileInfo}>{profile.fullName}</span></p>\r\n            </div>\r\n            <div>\r\n                <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            </div>\r\n            <div>\r\n                <p className={s.profileTitles}>Looking for a job : <span className={s.profileInfo}>{profile.lookingForAJob ? \"Yes\" : \"No\"}</span></p>\r\n            </div>\r\n            <div>\r\n                <p className={s.profileTitles}>My professional skills: <span className={s.profileInfo}>{profile.lookingForAJobDescription}</span></p>\r\n            </div>\r\n            <div>\r\n                <p className={s.profileTitles}>About me: <span className={s.profileInfo}>{profile.aboutMe}</span></p>\r\n            </div>\r\n            <div>\r\n                {isOwner && <button onClick={goToEditMode} >Add</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likes: 1},\r\n        {id: 2, message: 'It\\'s my first post', likes: 3},\r\n        {id: 3, message: 'It\\'s my first post', likes: 3}\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: state.newPostText, likes: 0}],\r\n                newPostText: ''\r\n            };\r\n\r\n        case ADD_NEW_POST_TEXT :\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n              profile: {...state.profile, photos: action.photos}\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let addPostActionCreator = () => ({type: ADD_POST});\r\nexport let addNewPostTextActionCreator = (text) => ({type: ADD_NEW_POST_TEXT, newText: text});\r\nexport let setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport let setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport let deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport let savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport let getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport let getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserStatus(userId);\r\n    dispatch(setUserStatus(response.data));\r\n};\r\nexport let updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setUserStatus(status));\r\n};\r\nexport let savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.uploadPhoto(file);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport let saveProfileData = (profileData) => async (dispatch, getState)  => {\r\n    const userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profileData);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/ava.c3bc0a10.svg\";","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport ava from '../../../../assets/images/ava.svg';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={ava} alt=\"avatar\" />\r\n      <div className={s.post_text}>\r\n          <p className={s.name}>Name</p>\r\n          <div className={s.message}>{props.message}</div>\r\n          <div className={s.likes}>\r\n              <span>Like</span> {props.likes}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.addNewPostText(text);\r\n    };\r\n\r\n    let postElements = props.posts.map(p => <Post likes={p.likes} key={p.id.toString()} message={p.message}/>);\r\n    return (\r\n        <div className={s.my_posts_div}>\r\n            <h2>My posts</h2>\r\n            <div className={s.post_area}>\r\n                <h3>Create a new post</h3>\r\n                <textarea onChange={onPostChange} ref={newPostElement}\r\n                          value={props.newPostText}\r\n                          placeholder={'Write something you think about'}/>\r\n                <button onClick={onAddPost}>Post</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, addNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n            posts: state.profilePage.posts,\r\n            newPostText: state.profilePage.newPostText\r\n        }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPostText: (text) => {\r\n            dispatch(addNewPostTextActionCreator(text));\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n    <main>\r\n      <ProfileInfo saveProfileData={props.saveProfileData} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n      <MyPostsContainer />\r\n        <div>\r\n            <p className={s.contactsTitle}>Contacts: </p> {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            <p className={s.contacts}>{contactTitle}: {contactValue}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfileData} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // if (!userId) {\r\n            //     this.props.history.push('/login');\r\n            // }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfileData={this.props.saveProfileData}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfileData}),\r\n    withRouter, withAuthRedirect)(ProfileContainer);","export default __webpack_public_path__ + \"static/media/icon.b169083b.svg\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport logo from './icon.svg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div>\r\n                <img src={logo}\r\n                     alt=\"logo\"/>\r\n                <h2 className={s.social}>Social network</h2>\r\n            </div>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'} className={s.loginLink}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authMe, securityAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SHOW_WRONG_EMAIL_OR_PASSWORD = 'SHOW_WRONG_EMAIL_OR_PASSWORD';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    correctPassword: null, // should be inCorrect =)\r\n    captchaUrl: null, // captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SHOW_WRONG_EMAIL_OR_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                correctPassword: true\r\n            };\r\n        }\r\n\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.payload,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuthUserData = (userId, email, login, isAuth, correctPassword) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth, correctPassword}\r\n});\r\nconst showWrongEmailOrPassword = () => ({type: SHOW_WRONG_EMAIL_OR_PASSWORD});\r\n\r\nconst getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: (captchaUrl)\r\n});\r\n\r\n\r\nexport const setAuthThunk = () => async (dispatch) => {\r\n    const response = await authMe.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        //success, set auth data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n\r\n    }\r\n};\r\nexport const loginThunkCreator = (values) => async (dispatch) => {\r\n    const response = await authMe.login(values);\r\n    if (response.resultCode === 0) {\r\n        //success, set auth data\r\n        dispatch(setAuthThunk());\r\n    } else {\r\n        if (response.resultCode === 10) {\r\n            //Incorrect anti-bot symbols\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        // show wrong email or pass\r\n        dispatch(showWrongEmailOrPassword());\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authMe.logout();\r\n    if (response.resultCode === 0) {\r\n        // set auth data to null\r\n        dispatch(setAuthUserData(null, null, null, false, null));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    // get captcha url from server\r\n    const captchaUrl = response.data.url;\r\n    // set captcha url to state\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport default authReducer;\r\n\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from 'react-redux';\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Formik, Field} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport s from './Login.module.css';\r\nimport {loginThunkCreator} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().email('Введите верный email').required('Обязательно'),\r\n        password: yup.string().required('Обязательно')\r\n    });\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n    ;\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    rememberMe: false,\r\n                    captcha: '',\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={(values) => {\r\n                    props.loginThunkCreator(values)\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            className={s.login_input}\r\n                            placeholder={\"email\"}\r\n                            type={\"text\"}\r\n                            name={\"email\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}/>\r\n                        <p>{errors.email && touched.email && errors.email}</p>\r\n                        <input\r\n                            className={s.login_input}\r\n                            placeholder={\"password\"}\r\n                            type={\"password\"}\r\n                            name={\"password\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}/>\r\n                        <p>{errors.password && touched.password && errors.password}\r\n                            {props.correctPassword\r\n                                ? \"Wrong email or password\"\r\n                                : null\r\n                            }</p>\r\n                        <Field\r\n                            type={\"checkbox\"}\r\n                            name={\"rememberMe\"}\r\n                        />\r\n                        <label htmlFor={\"rememberMe\"}>Remember Me</label>\r\n                        <button type={\"submit\"} disabled={!isValid && !dirty} onClick={handleSubmit}>Login</button>\r\n                        <div>\r\n                            {props.captchaUrl && <img src={props.captchaUrl} alt=\"captcha\"/>}\r\n                            {props.captchaUrl && <input\r\n                                type=\"text\"\r\n                                className={s.login_input}\r\n                                name={\"captcha\"}\r\n                                placeholder={\"captcha\"}\r\n                                value={values.captcha}\r\n                                onChange={handleChange}/>}\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        correctPassword: state.auth.correctPassword,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n};\r\n\r\nconst LoginFormContainer = connect(mapStateToProps, {loginThunkCreator})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    return <div className={s.login_form_block}>\r\n        <h1>Login</h1>\r\n        <div className={s.tip}>\r\n            <p>email: <span>free@samuraijs.com</span></p>\r\n            <p>pass: <span>free</span></p>\r\n        </div>\r\n        <LoginFormContainer/>\r\n    </div>\r\n};\r\n\r\n\r\nexport default Login;","import {setAuthThunk} from \"./auth-reducer\";\r\n\r\nconst SET_APP = 'SET_APP';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_APP:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst initializedSuccess = () => ({type: SET_APP});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(setAuthThunk());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n\r\nexport default store;","import React, {Suspense} from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport {HashRouter, Route} from 'react-router-dom';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {setAuthThunk} from \"./redux/auth-reducer\";\nimport {initializeApp} from './redux/app-reducer'\nimport {connect, Provider} from 'react-redux';\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\n// implementing lazy loading with react lazy and suspense wrapping\n// suspense needs to be with fallback attribute\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n      alert(\"Some Error Has Occurred\");\n    };\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        } else {\n            return (\n                <div className=\"container\">\n                    <div className=\"app-wrapper\">\n                        <HeaderContainer/>\n                        <Nav/>\n                        <div className=\"app-wrapper-content\">\n                            <Suspense fallback={<Preloader/>}>\n                                <Route path=\"/login\"\n                                       render={() => <Login/>}/>\n                                <Route path=\"/profile/:userId?\"\n                                       render={() => <ProfileContainer/>}/>\n\n                                <Route path=\"/dialogs\"\n                                       render={() => <DialogsContainer/>}/>\n\n                                <Route path=\"/users\"\n                                       render={() => <UsersContainer/>}/>\n                                <Route path=\"/news\" component={News}/>\n                                <Route path=\"/music\" component={Music}/>\n                                <Route path=\"/settings\" component={Settings}/>\n                            </Suspense>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = connect(mapStateToProps, {setAuthThunk, initializeApp})(App);\n\nconst AppWithRouterAndProvider = () => {\n    return <HashRouter basename={\"http://NickPaimon.github.io/react_social\"}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n};\n\nexport default AppWithRouterAndProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport './fonts/HelveticaNeue.ttf';\nimport AppWithRouterAndProvider from \"./App\";\n\nReactDOM.render(<AppWithRouterAndProvider />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_photo\":\"Users_user_photo__3pKqQ\",\"usersBlock\":\"Users_usersBlock__2t7du\",\"user\":\"Users_user__Issyp\",\"photoButtonBlock\":\"Users_photoButtonBlock__2unGN\",\"userTitle\":\"Users_userTitle__17w9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__1CWjJ\",\"selected\":\"Paginator_selected__PM1Q5\",\"paginator\":\"Paginator_paginator__1onIW\",\"total\":\"Paginator_total__2fe6H\",\"totalTitle\":\"Paginator_totalTitle__1pXDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Rggc\",\"post_text\":\"Post_post_text__3GC9m\",\"message\":\"Post_message__wPc1w\",\"name\":\"Post_name__3lBR8\",\"likes\":\"Post_likes__pYep4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_form_block\":\"Login_login_form_block__1INfx\",\"login_input\":\"Login_login_input__Q4hla\",\"login_error\":\"Login_login_error__28Fzc\",\"tip\":\"Login_tip__1cXLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3i4yG\",\"social\":\"Header_social__1TakQ\",\"loginBlock\":\"Header_loginBlock__VCJZn\",\"loginLink\":\"Header_loginLink__2k-4x\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatusWithHooks_status__3flru\",\"profileInfo\":\"ProfileStatusWithHooks_profileInfo__1BEAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_area\":\"MyPosts_post_area__3UzAx\",\"posts\":\"MyPosts_posts__1traG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"Profile_contactsTitle__3gOYi\",\"contacts\":\"Profile_contacts__2cjOx\"};"],"sourceRoot":""}