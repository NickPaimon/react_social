{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog_item","link","activeClassName","active","to","id","name","MessageItem","message","text","Dialogs","state","messagesPage","dialogElements","dialogs","map","d","messageElements","messages","m","Message","newMessageText","isAuth","dialog_items","textBlock","value","onChange","e","newText","target","addNewMessageText","placeholder","onClick","sendMessage","compose","connect","dispatch","addNewMessageTextActionCreator","addMessageActionCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,KAAO,wB,oBCAnGD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,KAAO,yBAAyB,OAAS,6B,oBCAzGD,EAAOC,QAAU,CAAC,QAAU,2B,6GCcbC,EAVI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,YAAlB,SACI,cAAC,IAAD,CAASF,UAAWC,IAAEE,KAAMC,gBAAiBH,IAAEI,OAAQC,GAAI,YAAcP,EAAMQ,GAA/E,SACKR,EAAMS,U,kBCARC,EALK,SAACV,GACjB,OAAQ,qBAAKC,UAAWC,IAAES,QAAlB,SAA4BX,EAAMY,Q,OC6C/BC,EA3CC,SAACb,GAEb,IAAIc,EAAQd,EAAMe,aAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OACpC,cAAC,EAAD,CAAYV,KAAMU,EAAEV,KAAiBD,GAAIW,EAAEX,IAAZW,EAAEX,OAEjCY,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OACtC,cAACC,EAAD,CAAwBX,KAAMU,EAAEX,SAAdW,EAAEd,OAEpBgB,EAAiBV,EAAMU,eAW3B,OAAKxB,EAAMyB,OAGP,sBAAKxB,UAAWC,IAAEe,QAAlB,UACI,qBAAKhB,UAAWC,IAAEwB,aAAlB,SACKV,IAEL,gCACKI,EACD,sBAAKnB,UAAWC,IAAEyB,UAAlB,UACI,0BAAUC,MAAOJ,EACPK,SAhBJ,SAACC,GACnB,IAAIC,EAAUD,EAAEE,OAAOJ,MACvB5B,EAAMiC,kBAAkBF,IAeFG,YAAY,eACZjC,UAAWC,IAAEU,KAHvB,eAIA,wBAAQuB,QAtBN,WACdnC,EAAMoC,eAqBM,2BAdU,cAAC,IAAD,CAAU7B,GAAI,Y,wBCF7B8B,sBAAQC,aAlBD,SAACxB,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACwB,GACtB,MAAO,CACHN,kBAAmB,SAACF,GAChBQ,EAASC,YAA+BT,KAE5CK,YAAa,WACTG,EAASE,oBAOUC,IADhBL,CACkCxB","file":"static/js/3.7b25b243.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__YjUkT\",\"textBlock\":\"Dialogs_textBlock__Icn4D\",\"text\":\"Dialogs_text__1tgK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_item\":\"DialogItem_dialog_item__2jv0o\",\"link\":\"DialogItem_link__1BmIw\",\"active\":\"DialogItem_active__3ceRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__g7PQB\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog_item}>\r\n            <NavLink className={s.link} activeClassName={s.active} to={\"/dialogs/\" + props.id}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (<div className={s.message}>{props.text}</div>);\r\n\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogElements = state.dialogs.map(d =>\r\n        <DialogItem name={d.name} key={d.id} id={d.id}/>\r\n    );\r\n    let messageElements = state.messages.map(m =>\r\n        <MessageItem key={m.id} text={m.message}/>\r\n    );\r\n    let newMessageText = state.newMessageText;\r\n\r\n\r\n    let sendMessage = () => {\r\n        props.sendMessage();\r\n    };\r\n    let onMessageChange = (e) => {\r\n        let newText = e.target.value;\r\n        props.addNewMessageText(newText);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog_items}>\r\n                {dialogElements}\r\n            </div>\r\n            <div>\r\n                {messageElements}\r\n                <div className={s.textBlock}>\r\n                    <textarea value={newMessageText}\r\n                              onChange={onMessageChange}\r\n                              placeholder='send message'\r\n                              className={s.text}> </textarea>\r\n                    <button onClick={sendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addNewMessageTextActionCreator, addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessageText: (newText) => {\r\n            dispatch(addNewMessageTextActionCreator(newText));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(addMessageActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\r\n                               withAuthRedirect)(Dialogs);"],"sourceRoot":""}